{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","api/firebase.tsx","api/user.tsx","components/Menu.tsx","components/Page.tsx","api/library.tsx","api/scholar.tsx","components/Citations.tsx","components/Result.tsx","pages/Explore.tsx","pages/Library.tsx","pages/Account.tsx","components/Keywords.tsx","components/Quotes.tsx","components/Progress.tsx","pages/Book.tsx","components/Center.tsx","pages/SignUp.tsx","pages/SignOut.tsx","pages/SignIn.tsx","pages/PasswordReset.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","provider","GoogleAuthProvider","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","collection","UserContext","createContext","useUser","useContext","validation","username","p1","p2","valid","condition","validEmail","validUsername","validPassword","passwordsMatch","UserProvider","children","useState","setUser","useEffect","onAuthStateChanged","userAuth","Provider","value","appPages","title","url","iosIcon","searchOutline","mdIcon","libraryOutline","settingsOutline","logOutOutline","Menu","location","useLocation","contentId","type","appPage","index","key","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","Page","name","collapse","size","LibraryContext","useLibrary","serialize","object","JSON","parse","stringify","urlFriendly","replace","LibraryProvider","library","setLibrary","orderBy","onSnapshot","querySnapshot","docs","book","message","includes","isNotADuplicate","year","log","pdf","catch","addToLibrary","forEach","delete","isNotEmpty","query","toList","authors","join","scholar","search","results","Citations","text","showCitations","setShowCitations","copied","setCopied","citation","cite","expand","onClick","isOpen","cssClass","showBackdrop","onDidDismiss","style","color","icon","checkmarkDoneCircleOutline","onCopy","Result","add","props","side","href","documentOutline","addOutline","Explore","setResults","setQuery","onIonChange","v4","ExplorePage","Library","BookItem","remove","backgroundColor","trashOutline","LibraryPage","Account","src","alt","mailOutline","AccountPage","Keywords","bid","input","setInput","edit","setEdit","undefined","keywords","firebaseKeywords","split","placeholder","Quotes","quotes","length","quote","Progress","enabled","setEnabled","totalInput","setTotalInput","totalEdit","setTotalEdit","progress","current","total","Number","max","toFixed","roundNumber","BookPage","setBook","useParams","bookProps","setBookProps","snapshot","b","CenterChild","height","width","display","justifyContent","alignItems","SignUp","setEmail","setUsername","password1","setPassword1","password2","setPassword2","setError","history","useHistory","createUserWithEmailAndPasswordHandler","event","preventDefault","createUserWithEmailAndPassword","onSuccess","push","clear","setTimeout","messageColor","flex","clearInput","SignUpPage","Center","SignOut","signOut","SignOutPage","SignIn","password","setPassword","signInWithEmailAndPasswordHandler","signInWithEmailAndPassword","signInWithPopup","logoGoogle","SignInPage","Reset","emailHasBeenSent","setEmailHasBeenSent","sendPasswordResetEmail","Success","PasswordReset","NotAuthenticated","path","component","from","to","exact","Authenticated","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mJAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.12f87971.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t524,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t525,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t526,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t527,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t528,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t529,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t530,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t531,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t532,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t533,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t534,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t535,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t536,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t537,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t538,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t539,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t540,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t541,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t542,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t543,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t544,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t545,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t546,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t547,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t548,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t549,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t550,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t551,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t552,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t553,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t554,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t555,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t556,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t557,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t558,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t559,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t560,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t561,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t562,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t563,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t564,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t565,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t566,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 245;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t570,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 267;\nmodule.exports = webpackAsyncContext;","import firebase from \"firebase\";\n\n/**\n * This is a utility class for the Firebase API\n * It handles the business logic for interaction with Firebase.\n */\n\n// In a production version we would hide these firebase API keys\n// Especially if the code was hosted on a public repository\nconst key = {\n  apiKey: \"AIzaSyAdLiVMSFfBcTNxPw48V9cEsq-fA8XvIDc\",\n  authDomain: \"scholar-e5753.firebaseapp.com\",\n  databaseURL: \"https://scholar-e5753.firebaseio.com\",\n  projectId: \"scholar-e5753\",\n  storageBucket: \"scholar-e5753.appspot.com\",\n  messagingSenderId: \"289588095416\",\n  appId: \"1:289588095416:web:bb273d746f68f82775474d\",\n  measurementId: \"G-NESTJ3Z9VR\"\n};\n\nconst initialize = () => {};\n\nfirebase.initializeApp(key);\nfirebase.analytics();\n\nconst auth = firebase.auth();\n\nconst firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nconst signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nconst generateUserDocument = async (user: any, additionalData?: any) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async (uid: string) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nconst collection = (uid: string) => {\n  return firestore\n    .collection(\"users\")\n    .doc(uid)\n    .collection(\"library\");\n};\n\nexport {\n  initialize,\n  auth,\n  firestore,\n  signInWithGoogle,\n  generateUserDocument,\n  collection\n};\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth, generateUserDocument } from \"./firebase\";\n\n/**\n * This class retrieves the user information.\n * It can be used to judge if the user is authenticated.\n * It updates upon changes to the users authentication state.\n */\n\nconst UserContext = createContext<any>(null);\n\nconst useUser = () => useContext(UserContext);\n\nconst UserProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\n      const user = await generateUserDocument(userAuth);\n      setUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userRef) => {\n      setUser(userRef);\n    });\n    return unsubscribe;\n  });\n\n  return <UserContext.Provider value={user}>{children}</UserContext.Provider>;\n};\n\n/**\n * Here we provide utility methods for Sign Up validation.\n * These are on top of the existing Firebase errors.\n * These provide context sensitive errors before Firebase is called.\n */\n\nlet error = \"\";\n\nconst validEmail = (email: string): Boolean => {\n  const condition = email !== \"\";\n  error = !condition ? \"Invalid Email\" : error;\n  return condition;\n};\n\nconst validUsername = (username: string): Boolean => {\n  const condition = username !== \"\";\n  error = !condition ? \"Invalid Username\" : error;\n  return condition;\n};\n\nconst validPassword = (p1: string) => {\n  const condition = p1 !== \"\";\n  error = !condition ? \"Invalid password\" : error;\n  return condition;\n};\n\nconst passwordsMatch = (p1: string, p2: string): Boolean => {\n  const condition = p1 === p2;\n  error = !condition ? \"Passwords do not match\" : error;\n  return condition;\n};\n\nconst validation = (\n  username: string,\n  p1: string,\n  p2: string,\n  email: string\n) => {\n  const valid =\n    validEmail(email) &&\n    validUsername(username) &&\n    validPassword(p1) &&\n    passwordsMatch(p1, p2);\n  return { valid: valid, error: error };\n};\n\nexport default UserProvider;\nexport { useUser, validation };\n","import {\n  libraryOutline,\n  logOutOutline,\n  searchOutline,\n  settingsOutline,\n} from \"ionicons/icons\";\nimport {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonNote,\n} from \"@ionic/react\";\nimport React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useUser } from \"../api/user\";\nimport \"../theme/Menu.css\";\n\n/**\n * This menu is displayed as a side panel on most pages.\n * It provides navigation for the user.\n * Depending on screen size it will automatically minimize.\n * @constructor\n */\nconst Menu = () => {\n  const location = useLocation();\n  const user = useUser();\n  const { displayName } = user;\n\n  useEffect(() => {}, []);\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"inbox-list\">\n          <IonListHeader>Scholar</IonListHeader>\n          <IonNote>{displayName}</IonNote>\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem\n                  className={\n                    location.pathname === appPage.url ? \"selected\" : \"\"\n                  }\n                  routerLink={appPage.url}\n                  routerDirection=\"none\"\n                  lines=\"none\"\n                  detail={false}\n                >\n                  <IonIcon\n                    slot=\"start\"\n                    ios={appPage.iosIcon}\n                    md={appPage.mdIcon}\n                  />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\n/**\n * Available pages on the menu\n */\nconst appPages: AppPage[] = [\n  {\n    title: \"Explore\",\n    url: \"/page/Explore\",\n    iosIcon: searchOutline,\n    mdIcon: searchOutline,\n  },\n  {\n    title: \"Library\",\n    url: \"/page/Library\",\n    iosIcon: libraryOutline,\n    mdIcon: libraryOutline,\n  },\n  {\n    title: \"Account\",\n    url: \"/page/Account\",\n    iosIcon: settingsOutline,\n    mdIcon: settingsOutline,\n  },\n  {\n    title: \"Sign Out\",\n    url: \"/page/SignOut\",\n    iosIcon: logOutOutline,\n    mdIcon: logOutOutline,\n  },\n];\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nexport default Menu;\n","import {\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonMenuButton,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React from \"react\";\n\n/**\n * A wrapper for child components.\n * Renders generic content required for each page.\n *\n * @param children to be rendered inside the Page\n * @param name of the page for the title\n * @constructor\n */\nconst Page: React.FC = ({ children, name }: Props) => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">{name}</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        {children}\n      </IonContent>\n    </IonPage>\n  );\n};\n\ntype Props = {\n  children?: React.ReactNode;\n  name?: string;\n};\n\nexport default Page;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { collection } from \"./firebase\";\nimport { useUser } from \"./user\";\n\n/**\n * This class is represents the user library as a global variable.\n * We store the business logic for interactions with that library here.\n * The library is accessed only one the user has signed in.\n */\n\nconst LibraryProvider: React.FC = ({ children }) => {\n  const [library, setLibrary] = useState<any[]>([]);\n  const user = useUser();\n\n  useEffect(() => {\n    if (user) {\n      collection(user.uid)\n        .orderBy(\"title\")\n        .onSnapshot((querySnapshot) => {\n          const data: any = querySnapshot.docs.map((doc) => doc.data());\n          setLibrary(data);\n        });\n    }\n  }, [user]);\n\n  const isNotADuplicate = (book: Book) => {\n    return !library.includes(book);\n  };\n\n  const addToLibrary = (book: Book) => {\n    if (book.pdf == null) {\n      book = {...book, pdf: \"https://ithemes.com/wp-content/uploads/2016/10/Funny-404-Pages-GitHub.png\" } \n    }\n    const data = {\n      book: serialize(book),\n      uid: `${urlFriendly(book.title + book.year)}`,\n    };\n    collection(user.uid)\n      .doc(data.uid)\n      .set(book)\n      .catch(function (error) {\n        error(\"Error writing document: \", error);\n      });\n  };\n\n  const error = (message: string) => {\n    console.log(message);\n  };\n\n  const add = (book: Book) => {\n    isNotADuplicate(book)\n      ? addToLibrary(book)\n      : error(`\"${book.title} (${book.year})\" is already in the library`);\n  };\n\n  const find = (title: string) => {\n    return title;\n  };\n\n  const remove = (title: string) => {\n    collection(user.uid)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.docs.forEach((doc) => {\n          if (doc.data().title === title) {\n            collection(user.uid).doc(doc.id).delete();\n          }\n        });\n      });\n  };\n\n  const clear = () => {\n    setLibrary([]);\n  };\n\n  return (\n    <LibraryContext.Provider value={[library, find, add, remove, clear]}>\n      {children}\n    </LibraryContext.Provider>\n  );\n};\n\nconst LibraryContext = createContext<any[]>([]);\n\nconst useLibrary = () => useContext(LibraryContext);\n\n/**\n * This is a refactoring of IArticle name for simplification.\n */\nexport type Book = {\n  title: string;\n  year: number;\n  authors: string[];\n  url?: string | undefined;\n  numCitations?: number | undefined;\n  description?: string;\n  pdf?: string;\n  relatedUrl?: string;\n  urlVersionsList?: string;\n  publication?: string;\n};\n\nconst serialize = (object: any): string => {\n  return JSON.parse(JSON.stringify(object));\n};\n\nconst urlFriendly = (id: string) => {\n  return id.replace(/ /g, \"_\");\n};\n\nexport default LibraryProvider;\nexport { serialize, urlFriendly, useLibrary };\n","import { Book } from \"./library\";\nimport { search } from \"scholarly\";\n\n/**\n * This class handles the Scholar API\n * We isolate the business logic here\n */\n\n/**\n * The scholar API cannot handle an empty query.\n */\nconst isNotEmpty = (query: string): Boolean => {\n  return query !== \"\";\n};\n\n/**\n * By default the authors comes as a list of strings.\n * This converts them into display ready text.\n */\nconst toList = (authors: string[]): string => {\n  const delimiter = \",\";\n  return authors.join(delimiter);\n};\n\n/**\n * This method parses a book into a LaTeX style citation\n */\nconst cite = ({ title, year, authors, url }: Book): string => {\n  const label = \"label\";\n  return `\n  @online{ ${label},\n    author = {${toList(authors)}},\n    title = {${title}},\n    year = {${year}},\n    url = {${url}}\n  }\n  `;\n};\n\n// Empty search queries break the scholarly API\nconst scholar = async (query: string) => {\n  const results: Book[] = await search(query);\n  return isNotEmpty(query) ? results : [];\n};\n\nexport { scholar, cite, toList };\n","import {\n  IonButton,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonPopover,\n  IonText,\n  IonTitle,\n} from \"@ionic/react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { checkmarkDoneCircleOutline } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport { Book } from \"../api/library\";\nimport { cite } from \"../api/scholar\";\n\n/**\n * We generate a LaTeX citation for a paper here\n *\n * @param children\n * @param book to generate a citation for\n * @param text name of the button (this component is reused)\n * @constructor\n */\nconst Citations: React.FC = ({ children, book, text }: Props) => {\n  const [showCitations, setShowCitations] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const citation = book ? cite(book) : \"\";\n\n  const dismiss = () => {\n    setShowCitations(false);\n    setCopied(false);\n  };\n\n  return (\n    <>\n      <IonButton expand=\"full\" onClick={() => setShowCitations(true)}>\n        <IonLabel>{text ? text : \"Show Citation\"}</IonLabel>\n      </IonButton>\n      <IonPopover\n        isOpen={showCitations}\n        cssClass=\"my-custom-class\"\n        showBackdrop={true}\n        onDidDismiss={dismiss}\n      >\n        {copied ? (\n          <>\n            <IonList>\n              <IonTitle>Copied!</IonTitle>\n              <IonItem>\n                <IonText>\n                  The citation has been copied to your clipboard.\n                </IonText>\n                <IonIcon\n                  style={{ color: \"green\" }}\n                  slot=\"end\"\n                  icon={checkmarkDoneCircleOutline}\n                />\n              </IonItem>\n              <IonItem>\n                <IonText style={{ color: \"grey\" }}>\n                  Tap anywhere outside to dismiss...\n                </IonText>\n              </IonItem>\n              <IonButton expand=\"full\" onClick={() => setShowCitations(false)}>\n                Back\n              </IonButton>\n            </IonList>\n          </>\n        ) : (\n          <>\n            <h1>Latex</h1>\n            <pre> {citation}</pre>\n            <CopyToClipboard text={citation} onCopy={() => setCopied(true)}>\n              <IonButton expand=\"full\">Copy</IonButton>\n            </CopyToClipboard>\n          </>\n        )}\n      </IonPopover>\n    </>\n  );\n};\n\ntype Props = {\n  children?: React.ReactNode;\n  book?: Book;\n  text?: string;\n};\n\nexport default Citations;\n","import {\n  IonIcon,\n  IonItem,\n  IonItemGroup,\n  IonItemOption,\n  IonItemOptions,\n  IonItemSliding,\n  IonLabel,\n  IonText,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { addOutline, documentOutline, libraryOutline } from \"ionicons/icons\";\nimport { Book, useLibrary } from \"../api/library\";\nimport { toList } from \"../api/scholar\";\nimport Citations from \"./Citations\";\n\n/**\n * The component for each search result on explore.\n * We can add a search result to our library.\n *\n * @param book to be displayed\n * @constructor\n */\nconst Result = (book: Book) => {\n  const { title, year, authors, url } = book;\n  const [, , add, ,] = useLibrary();\n\n  const props = { book: book, text: `''` };\n\n  return (\n    <IonItemSliding>\n      <IonItem>\n        <IonIcon slot=\"start\" icon={libraryOutline} />\n        <IonItemGroup>\n          <IonLabel>\n            <strong>{title}</strong> {year}\n          </IonLabel>\n          <IonText>{toList(authors)}</IonText>\n        </IonItemGroup>\n      </IonItem>\n      <IonItemOptions side=\"end\">\n        <IonItemOption color=\"dark\">\n          <Citations {...props}> </Citations>\n        </IonItemOption>\n        <IonItemOption color=\"dark\" href={url}>\n          <IonIcon slot=\"start\" icon={documentOutline} />\n        </IonItemOption>\n        <IonItemOption color=\"dark\" onClick={() => add(book)}>\n          <IonIcon slot=\"start\" icon={addOutline} />\n        </IonItemOption>\n      </IonItemOptions>\n    </IonItemSliding>\n  );\n};\n\nexport default Result;\n","import { IonButton, IonList, IonSearchbar } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport Page from \"../components/Page\";\nimport Result from \"../components/Result\";\nimport { scholar } from \"../api/scholar\";\n\n/**\n * The user can search for pages using the Scholarly API.\n * This performs a web-scrape on the Google Scholar search engine.\n * @constructor React Functional Component\n */\nconst ExplorePage: React.FC = () => {\n  const props = { name: \"Explore\" };\n  return (\n    <Page {...props}>\n      <Explore />\n    </Page>\n  );\n};\n\n/**\n * This component handles the search bar for the Explore page.\n * The Scholarly API cannot handle an empty search string.\n * The component relaods any time the results have changed.\n */\nconst Explore: React.FC = () => {\n  const [results, setResults] = useState<any[]>([]);\n  const [query, setQuery] = useState(\"\");\n\n  const search = () => {\n    if (query === \"\") {\n      setResults([]);\n      return;\n    }\n    scholar(query).then((results) => {\n      setResults(results);\n    });\n  };\n\n  useEffect(() => {}, [results]);\n\n  return (\n    <>\n      <IonSearchbar\n        value={query}\n        onIonChange={(e: any) => setQuery(e.detail.value!)}\n      />\n      <IonButton expand=\"full\" onClick={search}>\n        Search\n      </IonButton>\n      <IonList>\n        {results.map((book: any) => (\n          <Result key={v4()} {...book} />\n        ))}\n      </IonList>\n    </>\n  );\n};\n\nexport default ExplorePage;\n","import {\n  IonIcon,\n  IonItem,\n  IonItemGroup,\n  IonItemOption,\n  IonItemOptions,\n  IonItemSliding,\n  IonLabel,\n  IonList,\n  IonText,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { libraryOutline, trashOutline } from \"ionicons/icons\";\nimport { v4 } from \"uuid\";\nimport Page from \"../components/Page\";\nimport { useLibrary } from \"../api/library\";\nimport { toList } from \"../api/scholar\";\n\n/**\n * The library is a collection of citations the user has bookmarked.\n * They can add keywords, quotes and track progress through their libraries contents.\n */\nconst LibraryPage = () => {\n  const props = { name: \"Library\" };\n  return (\n    <Page {...props}>\n      <Library />\n    </Page>\n  );\n};\n\n/**\n * The library relies on the library context.\n * This context updates upon snapshot changes on Firebase.\n * The library is reloaded to reflect those changes.\n */\nconst Library = () => {\n  const [library] = useLibrary();\n  return (\n    <>\n      <IonList>\n        {library.map((book: any) => (\n          <BookItem key={v4()} {...book} />\n        ))}\n      </IonList>\n    </>\n  );\n};\n\n/**\n * Controls how each book in the library is displayed.\n * @param book to display as list item\n * @constructor\n */\nconst BookItem = (book: any) => {\n  const [, , , remove] = useLibrary();\n  const { title, authors } = book;\n  return (\n    <IonItemSliding>\n      <IonItem key={title} routerLink={\"Book/\" + title}>\n        <IonIcon slot=\"start\" icon={libraryOutline} />\n        <IonItemGroup>\n          <IonLabel>\n            <strong>{title}</strong>\n          </IonLabel>\n          <IonText>{toList(authors)}</IonText>\n        </IonItemGroup>\n      </IonItem>\n      <IonItemOptions side=\"end\">\n        <IonItemOption\n          style={{ backgroundColor: \"red\" }}\n          onClick={() => remove(title)}\n        >\n          <IonIcon slot=\"start\" icon={trashOutline} />\n        </IonItemOption>\n      </IonItemOptions>\n    </IonItemSliding>\n  );\n};\n\nexport default LibraryPage;\n","import {IonAvatar, IonButton, IonIcon, IonImg, IonItem, IonLabel, IonList, IonText} from \"@ionic/react\";\nimport {mailOutline} from \"ionicons/icons\";\nimport React from \"react\";\nimport {useUser} from \"../api/user\";\nimport Page from \"../components/Page\";\n\n/**\n * Displays basic account information to the user.\n * @constructor\n */\nconst AccountPage: React.FC = () => {\n  const props = { name: \"Account\" };\n  return (\n    <Page {...props}>\n      <Account />\n    </Page>\n  );\n};\n\n/**\n * Component requires the user context to access necessary information.\n * Displays there username, password and account photo.\n * Also provides password reset and sign out options.\n * @constructor React Functional Component\n */\nconst Account: React.FC = () => {\n  const user = useUser();\n  return (\n    <IonList>\n      <IonItem>\n        <IonAvatar slot=\"start\">\n          <IonImg src={user.photoURL} alt=\"user profile\" />\n        </IonAvatar>\n        <IonLabel>Username</IonLabel>\n        <IonText>{user?.displayName}</IonText>\n      </IonItem>\n      <IonItem>\n        <IonIcon slot=\"start\" icon={mailOutline} />\n        <IonLabel>Email</IonLabel>\n        <IonText>{user?.email}</IonText>\n      </IonItem>\n      <IonButton slot=\"end\" expand=\"full\" routerLink=\"/page/Reset\">\n        Reset Password\n      </IonButton>\n      <IonButton expand=\"full\" color=\"light\" routerLink=\"/page/SignOut\">\n        Sign Out\n      </IonButton>\n    </IonList>\n  );\n};\n\nexport default AccountPage;\n","import { IonButton, IonInput, IonItem, IonLabel, IonText } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { toList } from \"../api/scholar\";\nimport { collection } from \"../api/firebase\";\nimport { serialize, urlFriendly } from \"../api/library\";\nimport { useUser } from \"../api/user\";\n\n/**\n * We can store keywords for each the contents of our library.\n * These can be used to jog our memory for why we chose to store something.\n * These are stored on Firebase and can be updated.\n *\n * @param children\n * @param book to store keywords for\n * @param bid Firebase unique identifier for book document\n * @constructor\n */\nconst Keywords: React.FC = ({ children, book, bid }: Props) => {\n  const [input, setInput] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const user = useUser();\n\n  useEffect(() => {\n    if (user && bid) {\n      collection(user.uid)\n        .doc(bid)\n        .get()\n        .then((doc) => {\n          if (doc !== undefined) {\n            const docX = doc as any;\n            const keywords = docX.data().keywords;\n            setInput(keywords ? keywords.join(\",\") : \"\");\n          }\n        });\n    }\n  }, [bid, user, user.uid]);\n\n  const addKeyword = () => {\n    firebaseKeywords();\n    setEdit(!edit);\n  };\n\n  const firebaseKeywords = () => {\n    book = { ...book, keywords: input.split(\",\") };\n    if (!book) {\n      return;\n    }\n    const data = {\n      book: serialize(book),\n      uid: `${urlFriendly(book.title + book.year)}`,\n    };\n    collection(user.uid)\n      .doc(data.uid)\n      .set(book)\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  if (edit) {\n    return (\n      <IonItem>\n        <IonInput\n          placeholder=\"keywords: e.g. cats,dogs,fish\"\n          value={input}\n          onIonChange={(e) => setInput(e.detail.value!)}\n        />\n        <IonButton slot=\"end\" onClick={addKeyword}>\n          Add\n        </IonButton>\n      </IonItem>\n    );\n  }\n\n  return (\n    <IonItem>\n      <IonLabel>Keywords</IonLabel>\n      <IonText slot=\"end\">{toList(input.split(\",\"))}</IonText>\n      <IonButton slot=\"end\" onClick={() => setEdit(!edit)}>\n        Edit\n      </IonButton>\n    </IonItem>\n  );\n};\n\ntype Props = {\n  children?: React.ReactNode;\n  book?: any;\n  bid?: string;\n};\n\nexport default Keywords;\n","import { IonButton, IonInput, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport { v4 } from \"uuid\";\nimport React, { useEffect, useState } from \"react\";\nimport { collection } from \"../api/firebase\";\nimport { useUser } from \"../api/user\";\nimport { serialize, urlFriendly } from \"../api/library\";\n\n/**\n * A user can store relevant quotes from each paper.\n * These are a comma separated list in quotations.\n * More than one quote can be stored for each text.\n *\n * @param children\n * @param book to store quotes for\n * @param bid unique indentifier on Firebase firestore\n * @constructor\n */\nconst Quotes: React.FC = ({ children, book, bid }: Props) => {\n  const [input, setInput] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const user = useUser();\n\n  useEffect(() => {\n    if (user && bid) {\n      collection(user.uid)\n        .doc(bid)\n        .onSnapshot((doc) => {\n          if (doc !== undefined) {\n            const docX = doc as any;\n            const quotes = docX.data().quotes;\n            setInput(quotes ? `${quotes.join(`\",\"`)}` : \"\");\n          }\n        });\n    }\n  }, [bid, user]);\n\n  const addQuote = () => {\n    setEdit(!edit);\n    firebase();\n  };\n\n  const firebase = () => {\n    const quotes = input.length\n      ? input.split(`\",\"`).map((quote) => quote.replace(/\"/g, \"\"))\n      : [];\n    book = {\n      ...book,\n      quotes: quotes,\n    };\n    if (!book) {\n      return;\n    }\n    const data = {\n      book: serialize(book),\n      uid: `${urlFriendly(book.title + book.year)}`,\n    };\n    collection(user.uid)\n      .doc(data.uid)\n      .set(book)\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  if (edit) {\n    return (\n      <IonItem>\n        <IonInput\n          type=\"text\"\n          value={input}\n          placeholder={`e.g. \"first\",\"second\",\"third\"`}\n          onIonChange={(e) => setInput(e.detail.value!)}\n        />\n        <IonButton slot=\"end\" onClick={addQuote}>\n          Add\n        </IonButton>\n      </IonItem>\n    );\n  }\n\n  return (\n    <IonItem>\n      <IonLabel>Quotes</IonLabel>\n      <IonList>\n        {input.split(`\",\"`).map((quote) => {\n          return (\n            <IonItem key={v4()}>\n              <IonLabel>{input.length ? `\"${quote}\"` : null}</IonLabel>\n            </IonItem>\n          );\n        })}\n      </IonList>\n      <IonButton slot=\"end\" onClick={() => setEdit(!edit)}>\n        Edit\n      </IonButton>\n    </IonItem>\n  );\n};\n\ntype Props = {\n  children?: React.ReactNode;\n  book?: any;\n  bid?: string;\n};\n\nexport default Quotes;\n","import { IonButton, IonInput, IonItem, IonLabel, IonText } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { serialize, urlFriendly } from \"../api/library\";\nimport { useUser } from \"../api/user\";\nimport { collection } from \"../api/firebase\";\n\n/**\n * Lets users track their progress through each paper.\n * This is calculated as a percentage of pages read of the total.\n * A user manually enters the total number of pages.\n * Then they can update their current page as they see fit.\n * This information is stored on Firebase.\n *\n * @param children\n * @param book to track progress for\n * @param bid unique identifier for Firebase firestore\n * @constructor\n */\nconst Progress: React.FC = ({ children, book, bid }: Props) => {\n  const [input, setInput] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [enabled, setEnabled] = useState(false);\n  const [totalInput, setTotalInput] = useState(\"\");\n  const [totalEdit, setTotalEdit] = useState(false);\n  const user = useUser();\n\n  useEffect(() => {\n    if (user && bid) {\n      collection(user.uid)\n        .doc(bid)\n        .onSnapshot((doc) => {\n          if (doc !== undefined) {\n            const docX = doc as any;\n            const progress = docX.data().progress;\n            if (progress) {\n              setEnabled(true);\n              setInput(`${progress.current}`);\n              setTotalInput(`${progress.total}`);\n            }\n          }\n        });\n    }\n  }, [bid, user]);\n\n  const firebase = () => {\n    if (!book) {\n      return;\n    }\n    const progress = serialize({\n      current: Number(input),\n      total: Number(totalInput),\n    });\n    book = {\n      ...book,\n      progress: progress,\n    };\n    const data = {\n      book: serialize(book),\n      uid: `${urlFriendly(book.title + book.year)}`,\n    };\n    collection(user.uid)\n      .doc(data.uid)\n      .set(book)\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  const roundNumber = (current: number): string => {\n    const decimalPlaces = 0;\n    return current.toFixed(decimalPlaces);\n  };\n\n  const progress = (current: number, total: number): string => {\n    const percentage = (current / total) * 100;\n    return `${roundNumber(percentage)}%`;\n  };\n\n  const updateCurrent = () => {\n    const current = Number(input);\n    const total = Number(totalInput);\n    if (current > total || current < 0) {\n      return;\n    }\n    setEdit(false);\n    firebase();\n  };\n\n  const setTheTotal = () => {\n    setTotalEdit(false);\n    setEnabled(true);\n    firebase();\n  };\n\n  if (!enabled) {\n    if (totalEdit) {\n      return (\n        <IonItem>\n          <IonInput\n            type=\"text\"\n            value={totalInput}\n            placeholder=\"total pages: e.g. 500\"\n            onIonChange={(e) => setTotalInput(e.detail.value!)}\n          />\n          <IonItem>\n            <IonButton onClick={setTheTotal}>Set</IonButton>\n          </IonItem>\n        </IonItem>\n      );\n    }\n\n    return (\n      <IonItem>\n        <IonLabel>Progress</IonLabel>\n        <IonButton onClick={() => setTotalEdit(true)}>Enable</IonButton>\n      </IonItem>\n    );\n  }\n\n  if (edit) {\n    return (\n      <IonItem>\n        <IonInput\n          type=\"text\"\n          value={input}\n          onIonChange={(e) => setInput(e.detail.value!)}\n          placeholder={`current page: e.g. 100`}\n        />\n        <IonText>{` of ${totalInput} pages`}</IonText>\n        <IonButton slot=\"end\" onClick={updateCurrent}>\n          Set\n        </IonButton>\n      </IonItem>\n    );\n  }\n\n  return (\n    <IonItem>\n      <IonLabel slot=\"start\">\n        <progress value={Number(input)} max={Number(totalInput)} />\n      </IonLabel>\n      <IonText>{progress(Number(input), Number(totalInput))}</IonText>\n      <IonButton slot=\"end\" onClick={() => setEdit(!edit)}>\n        Edit\n      </IonButton>\n    </IonItem>\n  );\n};\n\ntype Props = {\n  children?: React.ReactNode;\n  book?: any;\n  bid?: string;\n};\n\nexport default Progress;\n","import {IonButton, IonItem, IonLabel, IonList, IonText} from \"@ionic/react\";\nimport {useParams} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {collection} from \"../api/firebase\";\nimport {useUser} from \"../api/user\";\nimport {Book} from \"../api/library\";\nimport {toList} from \"../api/scholar\";\nimport Page from \"../components/Page\";\nimport Citations from \"../components/Citations\";\nimport Keywords from \"../components/Keywords\";\nimport Quotes from \"../components/Quotes\";\nimport Progress from \"../components/Progress\";\n\n/**\n * The component for representing an individual book.\n * It retrieves the book's id on firebase from the browser.\n * @constructor React Functional Component\n */\nconst BookPage: React.FC = () => {\n  const [book, setBook] = useState<Book>();\n  const user = useUser();\n  const { id } = useParams();\n  const [bid] = useState(\"\");\n  const props = { name: \"Book\", bid: bid };\n  const [bookProps, setBookProps] = useState<any>({ book: book, bid: \"\" });\n\n  useEffect(() => {\n    const unsubscribe = collection(user.uid).onSnapshot(snapshot =>\n      snapshot.forEach(doc => {\n        if (id === doc.data().title) {\n          const b = doc.data() as Book;\n          setBookProps({ book: b, bid: doc.id });\n          setBook(b);\n        }\n      })\n    );\n    return unsubscribe;\n  }, [id, user.uid]);\n\n  return (\n    <Page {...props}>\n      <BookItem {...bookProps}> </BookItem>\n    </Page>\n  );\n};\n\n/**\n * This component displays the meta-data for the book.\n * It calls the subcomponents necessary to track progress.\n * @param children\n * @param book - The book to be summarized\n * @param bid - Firebase ID for the book document\n * @constructor - React Functional Component\n */\nconst BookItem: React.FC = ({ children, book, bid }: Props) => {\n  const { title, authors, year, url } = book\n    ? book\n    : { title: \"test\", authors: [], year: \"\", url: \"\" };\n\n  const props = { book: book, bid: bid };\n\n  return (\n    <IonList>\n      <IonItem>\n        <IonLabel>Title</IonLabel>\n        <IonText>{title}</IonText>\n      </IonItem>\n      <IonItem>\n        <IonLabel>Year</IonLabel>\n        <IonText>{year}</IonText>\n      </IonItem>\n      <IonItem>\n        <IonLabel>Author</IonLabel>\n        <IonText>{toList(authors)}</IonText>\n      </IonItem>\n      <Keywords {...props}> </Keywords>\n      <Quotes {...props}> </Quotes>\n      <Progress {...props}> </Progress>\n      <Citations {...props}> </Citations>\n      <IonButton expand=\"full\" color=\"light\" href={url}>\n        <IonLabel>View</IonLabel>\n      </IonButton>\n    </IonList>\n  );\n};\n\ntype Props = {\n    children?: React.ReactNode;\n    book?: Book;\n    bid?: string;\n};\n\nexport default BookPage;\n","import React from \"react\";\n\n/**\n * This is a wrapper a child component.\n * It puts that child in the center of the screen.\n * Both vertically and horizontally.\n *\n * @param children a child component to be centered\n * @constructor\n */\nconst CenterChild = ({ children }: Props) => {\n  return (\n    <div\n      style={{\n        height: \"80%\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default CenterChild;\n","import { IonButton, IonInput, IonItem, IonList } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth, generateUserDocument } from \"../api/firebase\";\nimport { validation } from \"../api/user\";\nimport Page from \"../components/Page\";\nimport CenterChild from \"../components/Center\";\n\n/**\n * This page allows a user to sign up using an email or password.\n * @constructor\n */\nconst SignUpPage = () => {\n  const props = { name: \"Sign Up\" };\n  return (\n    <Page {...props}>\n      <CenterChild>\n        <SignUp />\n      </CenterChild>\n    </Page>\n  );\n};\n\n/**\n * The sign up page has context sensitive error messages.\n * It is also used to generate a user document on Firebase.\n * @constructor\n */\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const doSignUp = (event: any) => {\n    const { valid, error } = validation(username, password1, password2, email);\n    valid ? onSuccess(event) : setError(error);\n  };\n\n  const createUserWithEmailAndPasswordHandler = async (event: any) => {\n    event.preventDefault();\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password1\n      );\n      generateUserDocument(user, { username });\n    } catch (error) {\n      setError(\"Error Signing up with email and password\");\n    }\n  };\n\n  const onSuccess = (event: any) => {\n    setError(\"Success\");\n    createUserWithEmailAndPasswordHandler(event);\n    history.push(\"/page/Explore\");\n    clear();\n  };\n\n  const clear = () => {\n    setTimeout(() => {\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword1(\"\");\n      setPassword2(\"\");\n      setError(\"\");\n    }, 1000);\n  };\n\n  const messageColor = error === \"Success\" ? \"green\" : \"red\";\n\n  return (\n    <IonList>\n      {error ? (\n        <IonItem style={{ color: messageColor }}>{error}</IonItem>\n      ) : null}\n      <IonItem style={{ flex: 1 }}>\n        <IonInput\n          value={email}\n          placeholder=\"email\"\n          onIonChange={(e) => setEmail(e.detail.value!)}\n          clearInput\n        />\n      </IonItem>\n      <IonItem style={{ flex: 1 }}>\n        <IonInput\n          value={username}\n          placeholder=\"username\"\n          onIonChange={(e) => setUsername(e.detail.value!)}\n          clearInput\n        />\n      </IonItem>\n      <IonItem style={{ flex: 1 }}>\n        <IonInput\n          type=\"password\"\n          placeholder=\"Password\"\n          onIonChange={(e) => setPassword1(e.detail.value!)}\n          value={password1}\n        />\n      </IonItem>\n      <IonItem style={{ flex: 1 }}>\n        <IonInput\n          type=\"password\"\n          placeholder=\"Confirm your password\"\n          onIonChange={(e) => setPassword2(e.detail.value!)}\n          value={password2}\n        />\n      </IonItem>\n      <IonButton expand=\"full\" onClick={doSignUp}>\n        Sign Up\n      </IonButton>\n      <IonItem routerLink=\"/page/SignIn\">\n        Already have an account? <a href=\"#\">Sign In</a>\n      </IonItem>\n    </IonList>\n  );\n};\n\nexport default SignUpPage;\n","import { IonButton, IonItem, IonList } from \"@ionic/react\";\nimport React from \"react\";\nimport { auth } from \"../api/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport CenterChild from \"../components/Center\";\n\n/**\n * This page is the confirmation displayed when a user signs out.\n * @constructor\n */\nconst SignOutPage: React.FC = () => {\n  const props = { name: \"Sign Out\" };\n  return (\n    <Page {...props}>\n      <CenterChild>\n        <SignOut />\n      </CenterChild>\n    </Page>\n  );\n};\n\n/**\n * When a user signs out they are taken back to the Sign In back.\n * Should they cancel at the confirmation, they are returned to the Explore.\n * @constructor\n */\nconst SignOut: React.FC = () => {\n  const history = useHistory();\n\n  const back = () => {\n    history.push(\"/page/Explore\");\n  };\n\n  const signOut = () => {\n    auth.signOut();\n    history.push(\"/page/SignIn\");\n  };\n\n  return (\n    <IonList>\n      <IonItem>\n        <p>Are you sure you want to sign out?</p>\n      </IonItem>\n      <IonButton expand=\"full\" onClick={signOut}>\n        Yes\n      </IonButton>\n      <IonButton expand=\"full\" color=\"light\" onClick={back}>\n        Cancel\n      </IonButton>\n    </IonList>\n  );\n};\n\nexport default SignOutPage;\n","import {\n  IonButton,\n  IonIcon,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonList,\n} from \"@ionic/react\";\nimport { logoGoogle } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUser } from \"../api/user\";\nimport { auth, signInWithGoogle } from \"../api/firebase\";\nimport Page from \"../components/Page\";\nimport CenterChild from \"../components/Center\";\n\n/**\n * User authentication with email/password or Google account is provided.\n * @constructor\n */\nconst SignInPage = () => {\n  const props = { name: \"Sign In\" };\n  return (\n    <Page {...props}>\n      <CenterChild>\n        <SignIn />\n      </CenterChild>\n    </Page>\n  );\n};\n\n/**\n * This Sign In page allows the user to authenticate their account.\n * It provides context sensitive error messages.\n * Upon success a user is redirected to the Explore page.\n * We provide navigation to Sign Up and Forgot Password from here.\n * @constructor\n */\nconst SignIn = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const user = useUser();\n\n  const doSignIn = () => {\n    setError(\"\"); // Clear the previous errors\n    signInWithEmailAndPasswordHandler();\n    onSuccess();\n  };\n\n  const doGoogle = () => {\n    setError(\"\"); // Clear the previous errors\n    signInWithGoogle();\n    onSuccess();\n  };\n\n  const signInWithEmailAndPasswordHandler = () => {\n    auth.signInWithEmailAndPassword(email, password).catch((error) => {\n      setError(error.message);\n      console.log(error);\n    });\n  };\n\n  const onSuccess = () => {\n    if (user) {\n      setError(\"Success\");\n      history.push(\"/page/Explore\");\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setTimeout(() => {\n      setPassword(\"\");\n      setError(\"\");\n    }, 1000);\n  };\n\n  const messageColor = error === \"Success\" ? \"green\" : \"red\";\n\n  return (\n    <IonList>\n      {error ? (\n        <IonItem style={{ color: messageColor }}>{error}</IonItem>\n      ) : null}\n      <IonItem style={{ flex: 1 }}>\n        <IonInput\n          placeholder=\"Email\"\n          onIonChange={(e) => setEmail(e.detail.value!)}\n          value={email}\n        />\n      </IonItem>\n      <IonItem style={{ flex: 1 }}>\n        <IonInput\n          type=\"password\"\n          placeholder=\"Password\"\n          onIonChange={(e) => setPassword(e.detail.value!)}\n          value={password}\n        />\n      </IonItem>\n      <IonItem routerLink=\"/page/Reset\">\n        <a>Forgot password?</a>\n      </IonItem>\n      <IonButton expand=\"full\" onClick={doSignIn}>\n        Sign In\n      </IonButton>\n      <IonButton expand=\"full\" color=\"light\" onClick={doGoogle}>\n        Sign In with Google\n        <IonIcon slot=\"end\" icon={logoGoogle} />\n      </IonButton>\n      <IonItem routerLink=\"/page/SignUp\">\n        {\" \"}\n        <IonLabel>Don't have an account?</IonLabel> <a href=\"#\"> Sign Up</a>\n      </IonItem>\n    </IonList>\n  );\n};\n\nexport default SignInPage;\n","import React, { useState } from \"react\";\nimport { IonButton, IonInput, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport { auth } from \"../api/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport CenterChild from \"../components/Center\";\n\n/**\n * The use can reset their password at Sign In or Account.\n * Users can regain access to their account should they forget their password.\n * Or users can update their existing password due to security concerns.\n * @constructor\n */\nconst PasswordReset = () => {\n  const props = { name: \"Reset Password\" };\n  return (\n    <Page {...props}>\n      <CenterChild>\n        <Reset />\n      </CenterChild>\n    </Page>\n  );\n};\n\n/**\n * The component asks for the users email address associated with the account.\n * It provides a context sensitive error message for invalid emails.\n * If valid the user is taken to a confirmation page saying an email has been sent.\n * @constructor\n */\nconst Reset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(\"\");\n  let history = useHistory();\n\n  const sendResetEmail = () => {\n    setError(\"\");\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setEmailHasBeenSent(true);\n        setTimeout(() => {\n          setEmailHasBeenSent(false);\n        }, 3000);\n      })\n      .catch(() => {\n        setError(\"Error resetting password\");\n      });\n  };\n\n  if (emailHasBeenSent) {\n    return <Success />;\n  }\n\n  return (\n    <IonList>\n      <IonLabel>Enter the email associated with your account.</IonLabel>\n      {error ? <IonItem style={{ color: \"red\" }}>{error}</IonItem> : null}\n      <IonInput\n        type=\"email\"\n        value={email}\n        placeholder=\"Email\"\n        onIonChange={(e: any) => setEmail(e.detail.value!)}\n      />\n      <IonButton expand=\"full\" onClick={sendResetEmail}>\n        Continue\n      </IonButton>\n      <IonButton\n        expand=\"full\"\n        color=\"light\"\n        onClick={() => history.push(\"/page/SignIn\")}\n      >\n        Sign In\n      </IonButton>\n    </IonList>\n  );\n};\n\n/**\n * Once the user enters a valid email address they are taken here.\n * @constructor\n */\nconst Success = () => {\n  return (\n    <IonList>\n      <IonItem style={{ color: \"green\" }}>\n        An email has been sent to you!\n      </IonItem>\n      <IonButton expand=\"full\" routerLink=\"/page/Explore\">\n        Back Home\n      </IonButton>\n    </IonList>\n  );\n};\n\nexport default PasswordReset;\n","/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\n\nimport React, { useEffect } from \"react\";\nimport { Redirect, Route, useHistory } from \"react-router-dom\";\nimport { IonApp, IonRouterOutlet, IonSplitPane } from \"@ionic/react\";\nimport { IonReactRouter } from \"@ionic/react-router\";\n\nimport { useUser } from \"./api/user\";\n\n// The pages for the application\nimport Menu from \"./components/Menu\";\nimport ExplorePage from \"./pages/Explore\";\nimport LibraryPage from \"./pages/Library\";\nimport AccountPage from \"./pages/Account\";\nimport BookPage from \"./pages/Book\";\nimport SignUpPage from \"./pages/SignUp\";\nimport SignOutPage from \"./pages/SignOut\";\nimport SignInPage from \"./pages/SignIn\";\nimport PasswordReset from \"./pages/PasswordReset\";\n\n/**\n * This is the React functional component at the root of our DOM.\n * @constructor\n */\nconst App: React.FC = () => {\n  const user = useUser();\n\n  useEffect(() => {}, [user]);\n\n  return (\n    <IonApp>\n      <IonReactRouter>\n        {user ? <Authenticated /> : <NotAuthenticated />}\n      </IonReactRouter>\n    </IonApp>\n  );\n};\n\n/**\n * These are the pages a user is who is not sign in has access to.\n * @constructor\n */\nconst NotAuthenticated: React.FC = () => {\n  return (\n    <IonRouterOutlet id=\"main\">\n      <Route path=\"/page/Reset\" component={PasswordReset} />\n      <Route path=\"/page/SignUp\" component={SignUpPage} />\n      <Route path=\"/page/SignIn\" component={SignInPage} />\n      <Redirect from=\"/\" to=\"/page/SignIn\" exact />\n    </IonRouterOutlet>\n  );\n};\n\n/**\n * One a user is authenticated, they have access to these pages\n * @constructor\n */\nconst Authenticated: React.FC = () => {\n  let history = useHistory();\n\n  // Once the user has signed in go to the home page.\n  useEffect(() => {\n    history.push(\"/page/Explore\");\n  }, [history]);\n\n  return (\n    <IonSplitPane contentId=\"main\">\n      <Menu />\n      <IonRouterOutlet id=\"main\">\n        <Route path=\"/page/Explore\" component={ExplorePage} />\n        <Route path=\"/page/Library\" component={LibraryPage} />\n        <Route path=\"/page/Account\" component={AccountPage} />\n        <Route path=\"/page/Book/:id\" component={BookPage} />\n        <Route path=\"/page/Reset\" component={PasswordReset} />\n        <Route path=\"/page/SignOut\" component={SignOutPage} />\n        <Redirect from=\"/\" to=\"/page/Explore\" exact />\n      </IonRouterOutlet>\n    </IonSplitPane>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport LibraryProvider from \"./api/library\";\nimport UserProvider from \"./api/user\";\nimport {initialize} from \"./api/firebase\";\n\n// Setup the firebase connection once.\ninitialize();\n\n/**\n * The application requires two contexts to be provided at the DOM root.\n * The library and user contexts. These contexts are required by the subcomponents.\n */\nReactDOM.render(\n  <UserProvider>\n    <LibraryProvider>\n      <App />\n    </LibraryProvider>\n  </UserProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}